import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import {
  ClerkProvider,
  SignedIn,
  SignedOut,
  SignInButton,
  SignUpButton,
  UserButton,
} from "@clerk/nextjs";
import History from "./History";
import { getCurrentUserId } from "../lib/getCurrentUserId";
import { SustainabilityResult } from "./ProductForm";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const url =
  "https://smitinit.app.n8n.cloud/webhook/c7d02d28-7c7e-4b30-adac-9256ee142cb6";

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const id = await getCurrentUserId();
  if (!id) throw new Error("User not authenticated!");

  const response = await fetch(url, {headers: { 'x-user-id': id }});
  let data = [];
try {
  const json = await response.json();
  // if it's not already an array, fall back to empty array
  data = Array.isArray(json) ? json  : [];
} catch {
  data = [];
}
  console.log("Fetched data:", data);
  return (
    <ClerkProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <header className="flex justify-between items-center p-4 gap-4 h-16">
            <History data={data} />
            <span className="text-green-600 text-5xl font-semibold">
              GreenGuardian
            </span>
            <div>
              <SignedOut>
                <SignInButton mode="modal" />
                <SignUpButton>
                  <button className="bg-[#6c47ff] text-white rounded-full font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 cursor-pointer">
                    Sign Up
                  </button>
                </SignUpButton>
              </SignedOut>
              <SignedIn>
                <UserButton />
              </SignedIn>
            </div>
          </header>
          {children}
        </body>
      </html>
    </ClerkProvider>
  );
}
